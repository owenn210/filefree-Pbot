const fs = require("fs");
const path = require("path");
const configFile = path.join(__dirname, "..", "cron", "greetingConfig.json");

module.exports = {
  config: {
    name: "greeting",
    version: "1.0",
    author: "GPT x Owen",
    description: "B·∫≠t/t·∫Øt v√† t√πy ch·ªânh l·ªùi ch√†o t·ª± ƒë·ªông",
    commandCategory: "box",
    usages: "[on/off/custom/reset]",
    cooldowns: 5,
  },

  onStart({ args, message, event }) {
    const threadID = event.threadID;

    // ƒê·ªçc config v·ªõi try-catch ƒë·ªÉ tr√°nh l·ªói khi file h·ªèng ho·∫∑c ch∆∞a c√≥
    let config = {};
    if (fs.existsSync(configFile)) {
      try {
        config = JSON.parse(fs.readFileSync(configFile, "utf-8"));
      } catch (e) {
        message.reply("‚ùå L·ªói ƒë·ªçc file c·∫•u h√¨nh. Vui l√≤ng th·ª≠ l·∫°i sau.");
        return;
      }
    }

    // Kh·ªüi t·∫°o c·∫•u h√¨nh cho thread n·∫øu ch∆∞a c√≥
    if (!config[threadID]) config[threadID] = { enabled: true, customMessage: {} };
    if (!config[threadID].customMessage) config[threadID].customMessage = {};

    const sub = args[0]?.toLowerCase();

    switch (sub) {
      case "on":
        config[threadID].enabled = true;
        message.reply("‚úÖ ƒê√£ b·∫≠t l·ªùi ch√†o trong box n√†y.");
        break;

      case "off":
        config[threadID].enabled = false;
        message.reply("‚ùå ƒê√£ t·∫Øt l·ªùi ch√†o trong box n√†y.");
        break;

      case "custom":
        const time = args[1]?.toLowerCase();
        const validTimes = ["morning", "noon", "afternoon", "evening", "night"];
        if (!validTimes.includes(time)) {
          return message.reply("‚ùó Vui l√≤ng nh·∫≠p th·ªùi gian h·ª£p l·ªá: morning, noon, afternoon, evening, night.");
        }
        const text = args.slice(2).join(" ");
        if (!text) {
          return message.reply("‚ùó Vui l√≤ng nh·∫≠p n·ªôi dung l·ªùi ch√†o.");
        }
        config[threadID].customMessage[time] = text;
        message.reply(`‚úÖ ƒê√£ set l·ªùi ch√†o ri√™ng cho ${time}.`);
        break;

      case "reset":
        delete config[threadID];
        message.reply("üîÑ ƒê√£ reset v·ªÅ m·∫∑c ƒë·ªãnh.");
        break;

      default:
        message.reply(
          "üßæ C√°ch d√πng:\n" +
          "- greeting on/off\n" +
          "- greeting custom [th·ªùi_gian] [n·ªôi_dung]\n" +
          "- greeting reset"
        );
        break;
    }

    // Ghi l·∫°i file config
    try {
      fs.writeFileSync(configFile, JSON.stringify(config, null, 2));
    } catch (e) {
      message.reply("‚ùå L·ªói ghi file c·∫•u h√¨nh. Vui l√≤ng th·ª≠ l·∫°i sau.");
    }
  }
};
